rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Student collection rules
    match /students/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && 
        request.resource.data.email == request.auth.token.email;
      allow update: if isOwner(userId) &&
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['name', 'phoneNumber', 'preferences', 'lastLogin', 'profileComplete']);
    }
    
    // Course collection rules
    match /courses/{courseId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    // Admin collection rules
    match /admins/{adminId} {
      allow read: if isOwner(adminId);
      allow write: if false; // Admin creation only through Firebase Console or backend
    }
    
    // Enrolled courses subcollection
    match /students/{userId}/enrolledCourses/{courseId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) || isAdmin();
    }
  }
}
